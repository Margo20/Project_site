# Generated by Django 3.1.5 on 2021-02-23 23:54

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='contactsModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=150, verbose_name='Введите Ваше имя')),
                ('phone', models.CharField(db_index=True, max_length=30, unique=True, verbose_name='Введите Ваш номер телефона')),
                ('email', models.CharField(db_index=True, max_length=30, unique=True, verbose_name='Введите Ваш Email')),
                ('description', models.TextField(blank=True, max_length=1500, null=True, verbose_name='Опишите объект:')),
                ('published', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Когда и во сколько')),
            ],
            options={
                'verbose_name': 'Заказчик',
                'verbose_name_plural': 'Заказчики',
                'ordering': ['-published'],
            },
        ),
        migrations.CreateModel(
            name='DataModelUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login', models.CharField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='DiscountModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=15, verbose_name='Ваш телефон')),
                ('published', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Когда и во сколько')),
            ],
            options={
                'verbose_name': 'Запрос на скидку',
                'verbose_name_plural': 'Запросы на скидку',
                'ordering': ['-published'],
            },
        ),
        migrations.CreateModel(
            name='EuroRemModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=20, verbose_name='Ваше имя')),
                ('phone', models.CharField(max_length=15, verbose_name='Ваш номер телефона')),
                ('description', models.TextField(blank=True, db_index=True, max_length=1500, null=True, verbose_name='Ремонт')),
                ('published', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Когда и во сколько')),
            ],
            options={
                'verbose_name': 'Расчет стоимости евроремонта',
                'verbose_name_plural': 'Расчеты стоимости евроремонта',
                'ordering': ['-published'],
            },
        ),
        migrations.CreateModel(
            name='FooterModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=20, verbose_name='Ваше имя')),
                ('phone', models.CharField(max_length=15, verbose_name='Ваш телефон')),
                ('email', models.CharField(db_index=True, max_length=30, verbose_name='Введите Ваш Email')),
                ('published', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Когда и во сколько')),
            ],
            options={
                'verbose_name': 'Заявка',
                'verbose_name_plural': 'Заявки',
                'ordering': ['-published'],
            },
        ),
        migrations.CreateModel(
            name='KapRemModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=20, verbose_name='Ваше имя')),
                ('phone', models.CharField(max_length=15, verbose_name='Ваш номер телефона')),
                ('description', models.TextField(blank=True, db_index=True, max_length=1500, null=True, verbose_name='Ремонт')),
                ('published', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Когда и во сколько')),
            ],
            options={
                'verbose_name': 'Расчет стоимости капитального ремонта',
                'verbose_name_plural': 'Расчеты стоимости капитального ремонта',
                'ordering': ['-published'],
            },
        ),
        migrations.CreateModel(
            name='OrderCalculationModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=20, verbose_name='Ваше имя')),
                ('phone', models.CharField(max_length=15, verbose_name='Ваш номер телефона')),
                ('description', models.TextField(blank=True, db_index=True, max_length=1500, null=True, verbose_name='Ремонт')),
                ('published', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Когда и во сколько')),
            ],
            options={
                'verbose_name': 'Расчет стоимости косметического ремонта',
                'verbose_name_plural': 'Расчеты стоимости косметического ремонта',
                'ordering': ['-published'],
            },
        ),
        migrations.CreateModel(
            name='RepairsModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50)),
                ('slug', models.SlugField()),
            ],
            options={
                'verbose_name': 'Вид ремонта',
                'verbose_name_plural': 'Виды ремонта',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ExtendUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_activated', models.BooleanField(db_index=True, default=True, verbose_name='Прошел активацию?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='OurworkModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50)),
                ('slug', models.SlugField()),
                ('image', models.ImageField(blank=True, upload_to='rem/%Y/%m/%d')),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('repair', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rep', to='rem.repairsmodel')),
            ],
            options={
                'verbose_name': 'Пример выполненного нами ремонта',
                'verbose_name_plural': 'Примеры выполненного нами ремонта',
                'ordering': ('name',),
                'index_together': {('id', 'slug')},
            },
        ),
    ]
